/**
 * Documentation Configuration Examples
 * 
 * Este ejemplo muestra c√≥mo configurar la documentaci√≥n de SyntroJS:
 * - Desarrollo: Documentaci√≥n completa habilitada
 * - Producci√≥n: Documentaci√≥n deshabilitada por seguridad
 * - Control granular: Habilitar/deshabilitar endpoints espec√≠ficos
 */

import { SyntroJS } from '../../dist/index.js';

console.log('üìñ Examples: Documentation Configuration\n');

// ============================================
// Ejemplo 1: Desarrollo - Documentaci√≥n completa
// ============================================
console.log('1Ô∏è‚É£ Development Mode - All docs enabled (default)');
const devApi = new SyntroJS({ 
  title: 'Development API',
  docs: true  // Por defecto, todos los docs est√°n habilitados
});

devApi.get('/users', {
  handler: () => ({ users: [] })
});

// Endpoints disponibles:
// ‚úÖ GET /              - Landing page
// ‚úÖ GET /docs          - Swagger UI
// ‚úÖ GET /redoc         - ReDoc
// ‚úÖ GET /openapi.json  - OpenAPI spec

// ============================================
// Ejemplo 2: Producci√≥n - Sin documentaci√≥n
// ============================================
console.log('\n2Ô∏è‚É£ Production Mode - All docs disabled for security');
const prodApi = new SyntroJS({ 
  title: 'Production API',
  docs: false  // Deshabilita TODA la documentaci√≥n
});

prodApi.get('/users', {
  handler: () => ({ users: [] })
});

// Endpoints disponibles:
// ‚ùå GET /              - 404 Not Found
// ‚ùå GET /docs          - 404 Not Found
// ‚ùå GET /redoc         - 404 Not Found
// ‚ùå GET /openapi.json  - 404 Not Found

// ============================================
// Ejemplo 3: Control granular
// ============================================
console.log('\n3Ô∏è‚É£ Granular Control - Enable only what you need');
const customApi = new SyntroJS({ 
  title: 'Custom API',
  docs: {
    landingPage: true,  // ‚úÖ Landing page habilitada
    swagger: false,     // ‚ùå Swagger UI deshabilitada
    redoc: false,       // ‚ùå ReDoc deshabilitado
    openapi: true       // ‚úÖ OpenAPI spec habilitada (para integraciones)
  }
});

customApi.get('/users', {
  handler: () => ({ users: [] })
});

// Endpoints disponibles:
// ‚úÖ GET /              - Landing page
// ‚ùå GET /docs          - 404 Not Found
// ‚ùå GET /redoc         - 404 Not Found
// ‚úÖ GET /openapi.json  - OpenAPI spec

// ============================================
// Ejemplo 4: Documentaci√≥n solo para internos
// ============================================
console.log('\n4Ô∏è‚É£ Internal Docs Only - Only OpenAPI for tooling');
const internalApi = new SyntroJS({ 
  title: 'Internal API',
  docs: {
    landingPage: false, // ‚ùå No landing page
    swagger: false,     // ‚ùå No UI docs (no expone manual de hackeo)
    redoc: false,       // ‚ùå No ReDoc
    openapi: true       // ‚úÖ Solo spec para herramientas internas
  }
});

internalApi.get('/users', {
  handler: () => ({ users: [] })
});

// Endpoints disponibles:
// ‚ùå GET /              - 404 Not Found
// ‚ùå GET /docs          - 404 Not Found
// ‚ùå GET /redoc         - 404 Not Found
// ‚úÖ GET /openapi.json  - OpenAPI spec (para Postman, etc)

console.log('\n‚úÖ Configuration examples ready!');
console.log('\nüí° Best Practices:');
console.log('   - Development: docs: true (default)');
console.log('   - Production: docs: false');
console.log('   - Internal: Solo openapi: true');
console.log('\n‚ö†Ô∏è Empire Security: Never expose /docs or /redoc in production!');

